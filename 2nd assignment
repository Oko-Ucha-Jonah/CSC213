.data
msg_1:.asciiz "\nWelcome, enter any number for (A):"
msg_2:.asciiz "\nplease, enter any number for (B):"
This is a complex root. vivian_3:.asciiz "\nplease, enter any number for (C):"
msg_error:.asciiz "\nOh!, Enter a real number"
msg_ans:.asciiz "\nGood \nYour answer is\n"
msg_and:.asciiz "\nAnd\n"
msg_goodbye:.asciiz "\nYou have try your best.\n Bye!!!"
msg_two: .float 2
msg_four: .float 4
discriminant_checker:.float 0

.text
Main:
lwc1 $f1,msg_two                   #$f1 hold 2.0
lwc1 $f2,msg_four                  #$f2 hold 4.0
lwc1 $f3,discriminant_checker       #$f3 hold 0.0 use it to check my discriminant

la $a0,msg_1                       #Tell user to enter any number as A
li $v0,4
syscall
li $v0,6
syscall
mov.s $f4,$f0                       #I use $f4 to hold A

la $a0,msg_2                       #Tell user to enter any number as B
li $v0,4
syscall
li $v0,6
syscall
mov.s $f5,$f0                       #I use $f5 to hold B

la $a0,msg_3                       #Tell user to enter any number as C
li $v0,4
syscall
li $v0,6
syscall
mov.s $f6,$f0                       #I use $f6 to hold C

#Now i start to calculate my discriminant when ## d = b^2-4*a*c
#And my 4=$f2, a=$f4, b=$f5, c=$f6

mul.s $f7,$f5,$f5                  #$f7 = b^2
mul.s $f8,$f2,$f4                  
mul.s $f8,$f8,$f6                  #$f8 = 4*a*c
sub.s $f8,$f7,$f8                  #$f8 = d = b^2-4*a*c#$f9 = d = b^2-4*a*c
mfc1 $t1,$f8                       #i change $f8 to $t1 so i can check if my discriminant is less  than zero(0)

blez $t1,error_label               #This is  to check if the discriminant is less than zero or equal to zero
sqrt.s $f10,$f8                    #$f10 hold the square root of the discriminant

#roots_solver                      #Nicce one. Now lets start calculation when ## -b+-sqrtd/2*a
neg.s $f9,$f5                      #I just change b to -b. like this $f9=-b
add.s $f23,$f9,$f10                #I just put -b+sqrtd
sub.s $f25,$f9,$f10                #I  just put -b-sqrtd
mul.s $f1,$f1,$f4                  #I only put 2*a  here
div.s $f24,$f23,$f1                #I  divide -b+sqrtd by 2*a
div.s $f26,$f25,$f1                #I  divide -b-sqrtd by 2*a
la $a0,msg_ans
li $v0,4
syscall

mov.s $f12,$f24
li $v0,2
syscall

la $a0,msg_and
li $v0,4
syscall

mov.s $f12,$f26
li $v0,2
syscall

b exit

error_label:
la $a0,msg_error
li $v0,4
syscall

exit:
la $a0,msg_goodbye
li $v0,4
syscall

li $v0,10
syscall
